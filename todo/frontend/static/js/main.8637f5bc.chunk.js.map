{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method_type","method","headers","body","JSON","stringify","catch","error","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","marginLeft","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8637f5bc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: '',\n        completed: false,\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.startEdit = this.startEdit.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.strikeUnstrike = this.strikeUnstrike.bind(this)\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentWillMount(){\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    console.log('fetching......')\n\n    fetch('https://todo.tusharbohara.com.np/api/todo/')\n        .then(response => response.json())\n        .then(data =>\n          this.setState({\n            todoList:data\n          })\n        )\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log('Name: ', name)\n    console.log('Value: ', value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title: value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    console.log('ITEM: ', this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = 'https://todo.tusharbohara.com.np/api/todo/'\n\n    var method_type = 'POST'\n\n    if (this.state.editing === true){\n      url = `https://todo.tusharbohara.com.np/api/todo/${this.state.activeItem.id}/`\n      method_type = 'PATCH'\n      this.setState({\n        editing: false\n      })\n    }\n\n    fetch(url, {\n      method: method_type,\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          completed: false,\n        }\n      })\n    }).catch(function(error){\n      console.log('ERROR: ', error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem:task,\n      editing:true,\n    })\n  }\n\n  deleteItem(task){\n    var csrftoken = this.getCookie('csrftoken')\n\n    fetch(`https://todo.tusharbohara.com.np/api/todo/${task.id}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n    }).then((response) => {\n      this.fetchTasks()\n    })\n  }\n\n  strikeUnstrike(task){\n    task.completed = !task.completed\n    var csrftoken = this.getCookie('csrftoken')\n    var url = `https://todo.tusharbohara.com.np/api/todo/${task.id}/`\n\n    fetch(url, {\n      method: 'PATCH',\n      headers:{\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({'completed': task.completed})\n    }).then(() => {\n      this.fetchTasks()\n    })\n\n    console.log('TASK: ', task.completed)\n  }\n\n  render() {\n    var tasks = this.state.todoList\n    var self = this\n    return(\n        <div className=\"container\">\n          <div id=\"task-container\">\n            <div id=\"form-wrapper\">\n              <form id=\"form\" onSubmit={this.handleSubmit}>\n                <div className=\"flex-wrapper\">\n                  <div style={{flex: 6}}>\n                    <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add Task Title\"/>\n                  </div>\n                  <div style={{flex: 1}}>\n                    <input className=\"btn btn-outline-success\" id=\"submit\" type=\"submit\" name=\"Add\"/>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div id=\"list-wrapper\">\n              {tasks.map(function (task, index){\n                return(\n                    <div key={index} className=\"task-wrapper flex-wrapper\">\n                      <div onClick={() => self.strikeUnstrike(task)} style={{flex: 7}}>\n                        {task.completed === false ? (\n                            <span>{task.title}</span>\n                        ) : (\n                            <strike>{task.title}</strike>\n                        )}\n                      </div>\n                      <div style={{flex: 1}}>\n                        <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                      </div>\n                      <div style={{flex: 1}}>\n                        <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-danger delete\" style={{marginLeft: 5}}>-</button>\n                      </div>\n                    </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}